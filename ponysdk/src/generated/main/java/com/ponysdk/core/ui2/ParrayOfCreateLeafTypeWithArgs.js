    var arrayOfCreateLeafTypeWithArgs =[
    function(args) {return new AbsoluteOrientationSensor(...args); },
    function(args) {return new AccessibleNodeList(...args); },
    function(args) {return new AmbientLightSensor(...args); },
    function(args) {return new AnalyserNode(...args); },
    function(args) {return new Animation(...args); },
    function(args) {return new AnimationEvent(...args); },
    function(args) {return new AnimationPlaybackEvent(...args); },
    function(args) {return new ApplicationCacheErrorEvent(...args); },
    function(args) {return new ArrayBuffer(...args); },
    function(args) {return new AudioBuffer(...args); },
    function(args) {return new AudioBufferSourceNode(...args); },
    function(args) {return new AudioContext(...args); },
    function(args) {return new AudioProcessingEvent(...args); },
    function(args) {return new BackgroundFetchClickEvent(...args); },
    function(args) {return new BackgroundFetchFailEvent(...args); },
    function(args) {return new BackgroundFetchSettledFetch(...args); },
    function(args) {return new BackgroundFetchedEvent(...args); },
    function(args) {return new BeforeInstallPromptEvent(...args); },
    function(args) {return new BiquadFilterNode(...args); },
    function(args) {return new BlobEvent(...args); },
    function(args) {return new BroadcastChannel(...args); },
    function(args) {return new CSSKeywordValue(...args); },
    function(args) {return new CSSMatrixComponent(...args); },
    function(args) {return new CSSPerspective(...args); },
    function(args) {return new CSSPositionValue(...args); },
    function(args) {return new CSSRotation(...args); },
    function(args) {return new CSSScale(...args); },
    function(args) {return new CSSSkew(...args); },
    function(args) {return new CSSTransformValue(...args); },
    function(args) {return new CSSTranslation(...args); },
    function(args) {return new CSSURLImageValue(...args); },
    function(args) {return new CSSUnitValue(...args); },
    function(args) {return new ChannelMergerNode(...args); },
    function(args) {return new ChannelSplitterNode(...args); },
    function(args) {return new ClipboardEvent(...args); },
    function(args) {return new CloseEvent(...args); },
    function(args) {return new Comment(...args); },
    function(args) {return new CompositionEvent(...args); },
    function(args) {return new CompositorWorker(...args); },
    function(args) {return new ConstantSourceNode(...args); },
    function(args) {return new ConvolverNode(...args); },
    function(args) {return new CustomEvent(...args); },
    function(args) {return new DOMError(...args); },
    function(args) {return new DOMException(...args); },
    function(args) {return new DOMMatrix(...args); },
    function(args) {return new DOMPoint(...args); },
    function(args) {return new DOMQuad(...args); },
    function(args) {return new DOMRect(...args); },
    function(args) {return new DataView(...args); },
    function(args) {return new Date(...args); },
    function(args) {return new DelayNode(...args); },
    function(args) {return new DeviceMotionEvent(...args); },
    function(args) {return new DeviceOrientationEvent(...args); },
    function(args) {return new DocumentTimeline(...args); },
    function(args) {return new DragEvent(...args); },
    function(args) {return new DynamicsCompressorNode(...args); },
    function(args) {return new ErrorEvent(...args); },
    function(args) {return new EventSource(...args); },
    function(args) {return new FaceDetector(...args); },
    function(args) {return new FederatedCredential(...args); },
    function(args) {return new FetchEvent(...args); },
    function(args) {return new File(...args); },
    function(args) {return new Float32Array(...args); },
    function(args) {return new Float64Array(...args); },
    function(args) {return new FocusEvent(...args); },
    function(args) {return new FontFace(...args); },
    function(args) {return new FontFaceSetLoadEvent(...args); },
    function(args) {return new ForeignFetchEvent(...args); },
    function(args) {return new FormData(...args); },
    function(args) {return new Function(...args); },
    function(args) {return new GainNode(...args); },
    function(args) {return new GamepadEvent(...args); },
    function(args) {return new Gyroscope(...args); },
    function(args) {return new HTMLAudioElement(...args); },
    function(args) {return new HTMLImageElement(...args); },
    function(args) {return new HTMLOptionElement(...args); },
    function(args) {return new HashChangeEvent(...args); },
    function(args) {return new Headers(...args); },
    function(args) {return new IDBObserver(...args); },
    function(args) {return new IDBVersionChangeEvent(...args); },
    function(args) {return new IIRFilterNode(...args); },
    function(args) {return new ImageCapture(...args); },
    function(args) {return new ImageData(...args); },
    function(args) {return new InputDeviceCapabilities(...args); },
    function(args) {return new InputEvent(...args); },
    function(args) {return new InstallEvent(...args); },
    function(args) {return new Int16Array(...args); },
    function(args) {return new Int32Array(...args); },
    function(args) {return new Int8Array(...args); },
    function(args) {return new IntersectionObserver(...args); },
    function(args) {return new JsObject(...args); },
    function(args) {return new KeyboardEvent(...args); },
    function(args) {return new KeyframeEffect(...args); },
    function(args) {return new LinearAccelerationSensor(...args); },
    function(args) {return new MIDIConnectionEvent(...args); },
    function(args) {return new MIDIMessageEvent(...args); },
    function(args) {return new Magnetometer(...args); },
    function(args) {return new MediaElementAudioSourceNode(...args); },
    function(args) {return new MediaEncryptedEvent(...args); },
    function(args) {return new MediaKeyMessageEvent(...args); },
    function(args) {return new MediaKeysPolicy(...args); },
    function(args) {return new MediaMetadata(...args); },
    function(args) {return new MediaQueryListEvent(...args); },
    function(args) {return new MediaRecorder(...args); },
    function(args) {return new MediaStream(...args); },
    function(args) {return new MediaStreamAudioDestinationNode(...args); },
    function(args) {return new MediaStreamAudioSourceNode(...args); },
    function(args) {return new MediaStreamEvent(...args); },
    function(args) {return new MediaStreamTrackEvent(...args); },
    function(args) {return new MessageEvent(...args); },
    function(args) {return new MutationObserver(...args); },
    function(args) {return new Notification(...args); },
    function(args) {return new NotificationEvent(...args); },
    function(args) {return new OfflineAudioCompletionEvent(...args); },
    function(args) {return new OfflineAudioContext(...args); },
    function(args) {return new OffscreenCanvas(...args); },
    function(args) {return new OscillatorNode(...args); },
    function(args) {return new PageTransitionEvent(...args); },
    function(args) {return new PannerNode(...args); },
    function(args) {return new PasswordCredential(...args); },
    function(args) {return new Path2D(...args); },
    function(args) {return new PerformanceObserver(...args); },
    function(args) {return new PeriodicWave(...args); },
    function(args) {return new PointerEvent(...args); },
    function(args) {return new PopStateEvent(...args); },
    function(args) {return new PresentationConnectionAvailableEvent(...args); },
    function(args) {return new PresentationConnectionCloseEvent(...args); },
    function(args) {return new PresentationRequest(...args); },
    function(args) {return new Promise(...args); },
    function(args) {return new PromiseRejectionEvent(...args); },
    function(args) {return new PushEvent(...args); },
    function(args) {return new RTCDTMFToneChangeEvent(...args); },
    function(args) {return new RTCDataChannelEvent(...args); },
    function(args) {return new RTCIceCandidate(...args); },
    function(args) {return new RTCPeerConnection(...args); },
    function(args) {return new RTCPeerConnectionIceEvent(...args); },
    function(args) {return new RTCSessionDescription(...args); },
    function(args) {return new RelativeOrientationSensor(...args); },
    function(args) {return new Request(...args); },
    function(args) {return new ResizeObserver(...args); },
    function(args) {return new Response(...args); },
    function(args) {return new ScrollState(...args); },
    function(args) {return new ScrollTimeline(...args); },
    function(args) {return new SecurityPolicyViolationEvent(...args); },
    function(args) {return new SensorErrorEvent(...args); },
    function(args) {return new SharedWorker(...args); },
    function(args) {return new SpeechRecognitionError(...args); },
    function(args) {return new SpeechRecognitionEvent(...args); },
    function(args) {return new SpeechSynthesisUtterance(...args); },
    function(args) {return new StereoPannerNode(...args); },
    function(args) {return new StorageEvent(...args); },
    function(args) {return new SyncEvent(...args); },
    function(args) {return new TextDecoder(...args); },
    function(args) {return new Touch(...args); },
    function(args) {return new TouchEvent(...args); },
    function(args) {return new TrackDefault(...args); },
    function(args) {return new TrackDefaultList(...args); },
    function(args) {return new TrackEvent(...args); },
    function(args) {return new TransitionEvent(...args); },
    function(args) {return new URL(...args); },
    function(args) {return new URLSearchParams(...args); },
    function(args) {return new USBAlternateInterface(...args); },
    function(args) {return new USBConfiguration(...args); },
    function(args) {return new USBConnectionEvent(...args); },
    function(args) {return new USBEndpoint(...args); },
    function(args) {return new USBInTransferResult(...args); },
    function(args) {return new USBInterface(...args); },
    function(args) {return new USBIsochronousInTransferPacket(...args); },
    function(args) {return new USBIsochronousInTransferResult(...args); },
    function(args) {return new USBIsochronousOutTransferPacket(...args); },
    function(args) {return new USBIsochronousOutTransferResult(...args); },
    function(args) {return new USBOutTransferResult(...args); },
    function(args) {return new Uint16Array(...args); },
    function(args) {return new Uint32Array(...args); },
    function(args) {return new Uint8Array(...args); },
    function(args) {return new Uint8ClampedArray(...args); },
    function(args) {return new VRDisplayEvent(...args); },
    function(args) {return new VTTCue(...args); },
    function(args) {return new WaveShaperNode(...args); },
    function(args) {return new WebGLContextEvent(...args); },
    function(args) {return new WebSocket(...args); },
    function(args) {return new WheelEvent(...args); },
    function(args) {return new Worker(...args); }];
